<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, January 27, 2022, 6:15 PM -->
<!-- MuClient version 5.05 -->

<!-- Plugin "indexer" generated by Plugin Wizard -->

<muclient>
<plugin
   name="indexer"
   author="Erick Rosso"
   id="55e1d330539761f176fa0815"
   language="Lua"
   purpose="Index the Toastush files into a manifest file."
   date_written="2022-01-27 18:14:37"
   requires="5.05"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>
<aliases>
  <alias
   enabled="y"
   name="indexer"
   script="gen_index"
   match="^index (.+)$"
   regexp="y"
   send_to="12"
  >
  </alias>
</aliases>
<script>
<![CDATA[

function get_hash(filename)

  local f, s

  f = io.open(filename, "r")

  if (f) then
    s = f:read("*all")

    f:close()
  end -- if

  local hash
  if (s) then
    hash = utils.tohex(utils.md5(s))
  end -- if

  return hash
end -- get_hash

function write_file(filename, data)

  local f = io.open(filename, "w")

  if (f) then
    f:write(data)
    f:close()
  return 1
  end -- if
end -- write_file

function gen_index(name, line, wc)

  -- create an index for the updater.
  -- Users won't have to call this unless they are maintaining their own package.

  local filename = wc[1]
  local toastush_id = "843d2f53cb3685465bda7d4a"
  local toastush_hash = get_hash(GetInfo(60).."miriani/toastush.xml")
  local dir = utils.readdir(GetInfo(60).."miriani/*.lua")
  local data = ""

  data = string.format("id = %s  hash = %s  aux_files = {", toastush_id, toastush_hash)

  local count = 1
  table.foreach(dir,
  function (k, v)
    data = data..string.format("   [%s] = {     name = \"%s\",  hash = \"%s\"},", count, k, get_hash(GetInfo(60).."miriani/"..k))
    count = count + 1
  end )
  data = data.."   }"

  local e = write_file(filename, data)
  if (e) then
    Note("Index file successfully generated.")
  else
    Note("Failed to generate the index file.")
  end -- if
end -- gen_index


]]>
</script> 

</muclient>
