<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, January 27, 2022, 6:15 PM -->
<!-- MuClient version 5.05 -->

<!-- Plugin "indexer" generated by Plugin Wizard -->

<muclient>
<plugin
   name="indexer"
   author="Erick Rosso"
   id="55e1d330539761f176fa0815"
   language="Lua"
   purpose="Index the Toastush files into a manifest file."
   date_written="2022-01-27 18:14:37"
   requires="5.05"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>
<aliases>
  <alias
   enabled="y"
   name="indexer"
   script="gen_index"
   match="^index (.+)$"
   regexp="y"
   send_to="12"
  >
  </alias>
</aliases>
<script>
<![CDATA[
  path = require("pl.path")

relpath = (function()
  return string.gsub(path.relpath(
  GetPluginInfo(GetPluginID(), 20)), 
  "\\", "/").."/"
end)() -- function

require(relpath.."constants")

function get_hash(filename)

  local f, s

  f = io.open(path.relpath(filename), "rb")

  if (f) then
    s = f:read("*all")

    f:close()
  end -- if

  local hash
  if (s) then
    hash = utils.tohex(utils.md5(s))
  end -- if

  return hash
end -- get_hash

function write_file(filename, manifest)

  local f = io.open(filename, "w")

  if (f) then
    f:write(manifest)
    f:close()
  return 1
  end -- if
end -- write_file

function gen_index(name, line, wc)

  -- create an index for the updater.
  -- Users won't have to call this unless they are maintaining their own package.

  local filename = wc[1]
  local toastush_hash = get_hash(relpath.."toastush.xml")
  local scripts = utils.readdir(relpath.."*")
  local sounds = utils.readdir(GetInfo(74)..SOUNDPATH.."*")
  local secretpack = utils.readdir("lua/secretpack/*")

  local manifest = ""

  manifest = string.format("id = %s  hash = %s  aux_files = {", TOASTUSH_ID, toastush_hash)
  local count = 1

  local function recursive_index(dir, ph, ex)
    Note("indexing "..ph)

    table.foreach(dir,
    function (k, v)
      if v.directory and (not string.find(k, "%.")) then

        -- Recursive index into filesystems.
        local sub_dir = utils.readdir(ph..k.."/*")
        recursive_index(sub_dir, ph..k.."/", ex)
      end -- if

      if path.extension(ph..k) == ex then
        manifest =   manifest..string.format("   [%s] = {     name = \"%s\",  hash = \"%s\",  dest = \"%s\"},", count, k, get_hash(ph..k),
        string.gsub(path.relpath(ph), "\\", "/").."/")
        count = count + 1
      end -- if

    end ) -- foreach
  end -- recursive_index

  recursive_index(scripts, relpath, ".lua")
  recursive_index(sounds, GetInfo(74)..SOUNDPATH, ".ogg")
  recursive_index(secretpack, "lua/secretpack/", ".lua")

  manifest = manifest.."   }"

  local e = write_file(filename, manifest)
  if (e) then
    Note("Index file successfully generated.")
  else
    Note("Failed to generate the index file.")
  end -- if
end -- gen_index


]]>
</script> 

</muclient>
